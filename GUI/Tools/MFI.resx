<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAMIOAADCDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAD07iJVYVp6Wv7//BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACfn78IPz9zaJ+fvwg+PnyUGxmK/4F9ijsAAAAAAAAAAEREhlk3M5DGMzCXsQAA
        AAAAAAAAAAAAAAAAAAAAAAAARkR0ZQ8Njv94dYZXzs62KjEuif9QTluyQ0KftWZmW3I8OXPcIBxu/0I/
        e5UAAAAAAAAAAAAAAAAAAAAAa2aJNFFOdmE1M4HzLi1V6C4uU+UOC3H/CAVv/x8bgP8MCn//JiOW/15c
        e7MAAAAAUlKHPlhThzEAAAAAoaG7EwwLbP5PT26akJCEfyEffv8MB5P/Ew6K/xQRgP8vKsb/KybL/yMd
        qv8mJW3wWFhwiiAgUPNWVKOol5evIAAAAACoqLgvNjWF/Q8OUf8FA3X/GROZ/yEdo/8oJbf/My7O/zMu
        4P80MOL/KyjF/xcVgf9+fIe2JyR23S8uk9BMR4FyiYWYQ19fbr0XFXr/Kyig/x4Ynf8mIqL/Ojug/0NE
        t/8yMqz/Kia4/ycjoP8gHZT/WlqCqmNghVJra4QyLSp39h4bb/8rK2n/AgFq/xMOlv8aF4f/JySk/1pc
        qP9ubcX/X2DB/zg2lP8sJ77/IyCu/4uIdm67u8MebW2NQXR0jzC0tLsiTk9Xpikil/8pJaX/JCCZ/x0c
        l/8ZFIH/LCmc/1dTr/9cWb7/PjnQ/yMfqP80MXL/HRxr/xcWe/8AAAAAAAAAAFlZWWkbGmP/DgqH/ycj
        nv83Msv/LijE/y8tvv8+Pcf/NDS7/xkVev8UEIX/dnSfw2FheGaioq0sAAAAAAAAAAClpaFHCgpG/wwI
        gP8ZFpn/Dw1r/ywpwf84NOb/OTfW/zw7z/8pJKv/LSp5/0VFc8tSUn1TAAAAAJmZzAUvL4jANzVu+zIy
        YvgYGFf+Eg6J/zYytv8hG5//HxuZ/yEei/8hHpH/LStl/MbCrDs5OVukIiCX6v///wF/f/8CQD57lxwX
        d/96do5LgYF1fBoZZP8MCVv/Dgp4/xgVhf8hHnD+PDpt6C4slv9WVIyB////AaqqqgwAAAAAAAAAAAAA
        AACPj7cgAAAAAC4sgKVua6X7QT51/3h4coxQUIbQWFWAtqqqqgM+PnW7OzmZyf///wEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACZmcwKY2CIlCEdmf93d4dCQT56oCMgj/6lpcwUSEh9PzQyjIwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEE9fIVZVJOajY2pCUA+em5IR5iMAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA+P8AAMDHAADABwAAgAkAAAAAAACAAAAAAAAAAAAAAAAAAAAAwAAAAMABAAAAAAAAAAEAANAD
        AADwBwAA+D8AAA==
</value>
  </data>
</root>