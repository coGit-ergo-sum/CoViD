<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CL</name>
    </assembly>
    <members>
        <member name="T:CoViD.CL.Grid">
            <summary>
            Is a square region made of points. (Simulates the place where the people lives and where the epidemic spreads.) 
            </summary>
        </member>
        <member name="T:CoViD.CL.Grid.RemoveDelegate">
            <summary>
            The delegate for the event Remove
            </summary>
            <param name="x">The x coordinate of the removing point.</param>
            <param name="y">The y coordinate of the removing point.</param>
        </member>
        <member name="E:CoViD.CL.Grid.Remove">
            <summary>
            Event raised when a point is removed
            </summary>
        </member>
        <member name="M:CoViD.CL.Grid.OnRemove(System.Single,System.Single)">
            <summary>
            Infrastructural methods: prevents the null reference exception
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="T:CoViD.CL.Grid.AddDelegate">
            <summary>
            The delegate for the event 'Add' 
            </summary>
            <param name="x">The x coordinate of the removing point.</param>
            <param name="y">The y coordinate of the removing point.</param>
        </member>
        <member name="E:CoViD.CL.Grid.Add">
            <summary>
            Event raised when a new contaminated point is added
            </summary>
        </member>
        <member name="M:CoViD.CL.Grid.OnAdd(System.Single,System.Single)">
            <summary>
            Infrastructural methods: prevents the null reference exception
            </summary>
            <param name="x">The x coordinate of the removing point.</param>
            <param name="y">The y coordinate of the removing point.</param>
        </member>
        <member name="F:CoViD.CL.Grid.Contamination">
            <summary>
            Points over the surface contaminated by the viruses
            </summary>
        </member>
        <member name="F:CoViD.CL.Grid.Contaminated">
            <summary>
            The list of the contaminated points (is a kind of indexing)
            </summary>
        </member>
        <member name="F:CoViD.CL.Grid.Hospitals">
            <summary>
            Information about the Hospitals in the region.
            </summary>
        </member>
        <member name="F:CoViD.CL.Grid.Population">
            <summary>
            Who lives in the grid
            </summary>
        </member>
        <member name="F:CoViD.CL.Grid.Radius">
            <summary>
            The extention of the grid. The 'Grid' is a square that spans between '-Radius' and 'Radius'.
            </summary>
        </member>
        <member name="P:CoViD.CL.Grid.Ticks">
            <summary>
            The elapsed unity of time from the begining of the computation.
            </summary>
        </member>
        <member name="F:CoViD.CL.Grid.Y0">
            <summary>
            The 'intercept'of the linear mapping.
            </summary>
        </member>
        <member name="F:CoViD.CL.Grid.M">
            <summary>
            he 'slope'of the linear mapping.
            </summary>
        </member>
        <member name="M:CoViD.CL.Grid.X2R(System.Single)">
            <summary>
            Converts the 'x' value of the point in the corresponding Row value in the bidimensionale array 'Contamination'.
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:CoViD.CL.Grid.Y2C(System.Single)">
            <summary>
            Converts the 'y' value of the point in the corresponding Column value in the bidimensionale array 'Contamination'.
            </summary>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:CoViD.CL.Grid.R2X(System.Int32)">
            <summary>
            Converts the 'Row' value in the bidimensionale array 'Contamination' to  the 'x' value of the point.
            </summary>
            <param name="r">The 'row' value in the bidimensionale array 'Contamination'.</param>
            <returns>The corrisponding 'x' value.</returns>
        </member>
        <member name="M:CoViD.CL.Grid.C2Y(System.Int32)">
            <summary>
            Converts the 'Column' value in the bidimensionale array 'Contamination' to  the 'y' value of the point.
            </summary>
            <param name="c">The 'column' value in the bidimensionale array 'Contamination'.</param>
            <returns>The corrisponding 'y' value.</returns>
        </member>
        <member name="F:CoViD.CL.Grid.IndexMax">
            <summary>
            
            </summary>
        </member>
        <member name="M:CoViD.CL.Grid.#ctor(System.Int32,CoViD.CL.Population,CoViD.CL.Hospitals)">
            <summary>
            Main Constructor: initializes the grid
            </summary>
            <param name="radius">The extention of the grid.</param>
            <param name="population">One instance of the Population object.</param>
            <param name="hospitals">The collection of Hospitals where people with 'severe' illnes are sent</param>
        </member>
        <member name="M:CoViD.CL.Grid.Contaminate(System.Decimal,CoViD.CL.Point)">
            <summary>
             Sets the contamination for a point 
            </summary>
            <param name="viruses">The number of viruses (unity of viruses) in the provided point.</param>
            <param name="location">The location where is the contamination</param>
        </member>
        <member name="M:CoViD.CL.Grid.Tick">
            <summary>
            Evolves the dynamic of one unit of time.
            </summary>
        </member>
        <member name="M:CoViD.CL.Grid.GetViruses(CoViD.CL.Point)">
            <summary>
            Gets the viruses on the grid in the provided point.
            </summary>
            <param name="point">The point on the grid from where get the number of viruses.</param>
            <returns>Hov many unity of viruses there are in the provided point.</returns>
        </member>
        <member name="M:CoViD.CL.Grid.Reset">
            <summary>
            Resets all the grid: clears contaminated, set Ticks = 0, calls Population.Reset() and sets to 0 the matrix Contamination
            </summary>
        </member>
        <member name="T:CoViD.CL.Home">
            <summary>
            The starting point for every 'jorney'
            </summary>
        </member>
        <member name="T:CoViD.CL.Hospital">
            <summary>
            The place where a person goes when its ilness become severe. 
            </summary>
        </member>
        <member name="F:CoViD.CL.Hospital.Location">
            <summary>
            The posizion on the grid.
            </summary>
        </member>
        <member name="F:CoViD.CL.Hospital.Beds">
            <summary>
            The number of bed available in the hospital.
            </summary>
        </member>
        <member name="M:CoViD.CL.Hospital.#ctor(CoViD.CL.Point,System.Int32)">
            <summary>
            Main CTor (sets location and beds).
            </summary>
            <param name="location">The posizion on the grid.</param>
            <param name="beds">The number of bed available in the hospital.</param>
        </member>
        <member name="M:CoViD.CL.Hospital.Tick">
            <summary>
            A unity of time (not implemented.)
            </summary>
        </member>
        <member name="M:CoViD.CL.Hospital.Reset">
            <summary>
            Re sets the hospital at its inizial status (not implemented.)
            </summary>
        </member>
        <member name="T:CoViD.CL.Hospitals">
            <summary>
            A list of all the hospitals
            </summary>
        </member>
        <member name="M:CoViD.CL.Hospitals.#ctor">
            <summary>
            Main CTor (empty)
            </summary>
        </member>
        <member name="M:CoViD.CL.Hospitals.Reset">
            <summary>
            Resets each hospital in the list.
            </summary>
        </member>
        <member name="M:CoViD.CL.Hospitals.Tick">
            <summary>
            Ticks each hospital in the list.
            </summary>
        </member>
        <member name="T:CoViD.CL.Locations">
            <summary>
            The list of points on the grid, randomly generated, during a person's journey. 
            (The hope is to find some source of real movements)
            </summary>
        </member>
        <member name="P:CoViD.CL.Locations.Item(System.Int32)">
            <summary>
            Retrives the coordinates of a single location (point) 
            </summary>
            <param name="index">The index of the point.</param>
            <returns>The location at the given index.</returns>
        </member>
        <member name="M:CoViD.CL.Locations.#ctor">
            <summary>
            Creates a list with only one point at '0, 0'.
            </summary>
            <returns>A list with only one point at '0, 0'</returns>
        </member>
        <member name="M:CoViD.CL.Locations.#ctor(System.Int32,System.Byte)">
            <summary>
            Create a list of points on the grid to simulate a person's movements.
            The "grid is splitted in 4 different sub grids: cities. Each people moves
            in its own city. 
            Travellers can move across cities.
            If Traveller is 1 (100%) there is only one big city
            Points are taken randomly. 
            (This method calls the other method in overload with 'travellers = 1')
            </summary>
            <param name="radius">"Grid" is a square which side is twice 'radius'.</param>
            <param name="distribution">Change the distribution of the probability.</param>
            <returns>A List of points simulating someone moving.</returns>
        </member>
        <member name="M:CoViD.CL.Locations.#ctor(System.Int32,System.Byte,Vi.Types.Percentage)">
            <summary>
            Create a list of points on the grid to simulate a person's movements.
            The "grid is splitted in 4 different sub grids: cities. Each people moves
            in its own city. 
            Travellers can move across cities.
            If Traveller is 1 (100%) there is only one big city
            Points are taken randomly. 
            (This method calls the other method in overload with 'travellers = 1')
            </summary>
            <param name="radius">"Grid" is a square which side is twice 'radius'.</param>
            <param name="distribution">Change the distribution from 1: Omogeneous, 2:triangular, 3: parabolic ... Gaussian (should be  'The Central limit theorem' if I'm right.)</param>
            <param name="traveller"></param>
        </member>
        <member name="T:CoViD.CL.Person.States">
            <summary>
            The possible states in this simulation
            </summary>
        </member>
        <member name="F:CoViD.CL.Person.States.Susceptible">
            <summary>
            Who can be affected by an illness (the same as the SIR Model)
            </summary>
        </member>
        <member name="F:CoViD.CL.Person.States.Latency">
            <summary>
            The symptomless incubation period
            </summary>
        </member>
        <member name="F:CoViD.CL.Person.States.Ill">
            <summary>
            The infection become evident and contagious.
            </summary>
        </member>
        <member name="F:CoViD.CL.Person.States.Severe">
            <summary>
            The disease has crossed a threshold and the person needs hospitalization.
            </summary>
        </member>
        <member name="F:CoViD.CL.Person.States.Convalescent">
            <summary>
            The disease has passed its peak and the person is doing better (not the concept of recovery in SIR)
            </summary>
        </member>
        <member name="F:CoViD.CL.Person.States.Immune">
            <summary>
            The illness is gone and the person is protected from disease.
            </summary>
        </member>
        <member name="F:CoViD.CL.Person.States.Dead">
            <summary>
            The person is dead.
            </summary>
        </member>
        <member name="T:CoViD.CL.Person.SIRStates">
            <summary>
            The possible states in a SIR model
            </summary>
        </member>
        <member name="F:CoViD.CL.Person.SIRStates.Susceptible">
            <summary>
            Who can be affected by an illness
            </summary>
        </member>
        <member name="F:CoViD.CL.Person.SIRStates.Infected">
            <summary>
            Who is affected by an illness
            </summary>
        </member>
        <member name="F:CoViD.CL.Person.SIRStates.Recovered">
            <summary>
            The disease has passed its peak, regardless the person is dead or alive
            </summary>
        </member>
        <member name="T:CoViD.CL.Person.Ages">
            <summary>
            Partition in five age ranges
            </summary>
        </member>
        <member name="F:CoViD.CL.Person.Ages.Under5s">
            <summary>
            Who with the age under 5 years
            </summary>
        </member>
        <member name="F:CoViD.CL.Person.Ages.Under15">
            <summary>
            Who with the age under 15 years
            </summary>
        </member>
        <member name="F:CoViD.CL.Person.Ages.Under25">
            <summary>
            Who with the age under 25 years
            </summary>
        </member>
        <member name="F:CoViD.CL.Person.Ages.Under65">
            <summary>
            Who with the age under 65 years
            </summary>
        </member>
        <member name="F:CoViD.CL.Person.Ages.Plus65">
            <summary>
            Who with the age over 65 years
            </summary>
        </member>
        <member name="T:CoViD.CL.Person.SickDelegate">
            <summary>
            The delegate for the 'Sick' event.
            </summary>
        </member>
        <member name="E:CoViD.CL.Person.Sick">
            <summary>
            Event raised when a person become 'Ill' (contagious)
            </summary>
        </member>
        <member name="T:CoViD.CL.Person.SneezeDelegate">
            <summary>
            The delegate for the 'Sneeze' event. (Sneezing is one way that lets the viruses spread)
            </summary>
            <param name="viruses">The number of (unity of) viruses emitted with the sneeze.</param>
            <param name="location">The 'Point' infected by the sneeze.</param>
        </member>
        <member name="E:CoViD.CL.Person.Sneeze">
            <summary>
            Event raised each time the person sneezes, spreading viruses.
            </summary>
        </member>
        <member name="M:CoViD.CL.Person.OnSneeze(System.Decimal,CoViD.CL.Point)">
            <summary>
            Infrastructural methods: prevents the null reference exception
            </summary>
            <param name="viruses">The number of viruses spreaded by the sneeze.</param>
            <param name="location">The current location of the person</param>
        </member>
        <member name="T:CoViD.CL.Person.TouchDelegate">
            <summary>
            The delegate for the 'Touch' event. (Touching is the oter way that lets the viruses spread)
            </summary>
            <param name="viruses">The number of viruses spreaded by the sneeze.</param>
            <param name="location">The current location of the person</param>
            <returns></returns>
        </member>
        <member name="E:CoViD.CL.Person.Touch">
            <summary>
            Event raised each time the person touches something, spreading viruses.
            </summary>
        </member>
        <member name="M:CoViD.CL.Person.OnTouch(System.UInt64)">
            <summary>
            Infrastructural methods: prevents the null reference exception
            </summary>
            <param name="viruses"></param>
            <returns></returns>
        </member>
        <member name="T:CoViD.CL.Person.InhaleDelegate">
            <summary>
            The delegate for the 'Inhale' event. (Inhaling is a way that lets the viruses enter the body)
            </summary>
        </member>
        <member name="M:CoViD.CL.Person.OnInhale">
            <summary>
            Infrastructural methods: prevents the null reference exception
            </summary>
            <returns></returns>
        </member>
        <member name="T:CoViD.CL.Person.ExhaleDelegate">
            <summary>
            The delegate for the 'Exhale' event. (Inhaling is a way that lets the viruses enter the body)
            </summary>
            <param name="viruses">The number of viruses a sneeze can emit.</param>
            <param name="x">The x location of the person.</param>
            <param name="y">The y location of the person.</param>
        </member>
        <member name="E:CoViD.CL.Person.Exhale">
            <summary>
            Infrastructural methods: prevents the null reference exception
            </summary>
        </member>
        <member name="M:CoViD.CL.Person.OnCough(System.Int32,System.Int32,System.Int32)">
            <summary>
            Infrastructural methods: prevents the null reference exception
            </summary>
            <param name="viruses"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="P:CoViD.CL.Person.AntibodyGrowthRatio">
            <summary>
             Antibodies's growth ratio
            </summary>
        </member>
        <member name="P:CoViD.CL.Person.AntibodyGrowth">
            <summary>
            
            </summary>
        </member>
        <member name="P:CoViD.CL.Person.AntibodyDecayRatio">
            <summary>
             Antibodies's decay ratio
            </summary>
        </member>
        <member name="P:CoViD.CL.Person.VirusGrowthRatio">
            <summary>
            The 'theoric' growth ratio for the virus. (here plays the rule of the maximum growth ratio.)
            </summary>
        </member>
        <member name="P:CoViD.CL.Person._VirusGrowthRatio">
            <summary>
            The 'ongoing' growth ratio:  
            _VirusGrowthRatio = VirusGrowthRatio - ((VirusGrowthRatio - 1)/100) * VirusPercent
            (It is a linear interpolation between 1 and VirusGrowthRatio.)
            </summary>
        </member>
        <member name="P:CoViD.CL.Person.VirusGrowth">
            <summary>
            The 'theoric' growth percentage for the virus. (here plays the rule of the maximum growth percentage.)
            </summary>
        </member>
        <member name="P:CoViD.CL.Person.Age">
            <summary>
            The age of the person
            </summary>
        </member>
        <member name="F:CoViD.CL.Person.VirusLimit">
            <summary>
            Max number of ("unities") of viruses in a body.
            (Used to get a limit to the growth of the number of viruses.)
            </summary>
        </member>
        <member name="P:CoViD.CL.Person.DeadThreshold">
            <summary>
            
            </summary>
        </member>
        <member name="P:CoViD.CL.Person.Location">
            <summary>
            Gets the current location of the person.
            </summary>
        </member>
        <member name="F:CoViD.CL.Person.Locations">
            <summary>
            List of the location of the person during the simulation.
            </summary>
        </member>
        <member name="F:CoViD.CL.Person.State">
            <summary>
            The current state of health
            </summary>
        </member>
        <member name="F:CoViD.CL.Person.SIR">
            <summary>
            The current SIR's state
            </summary>
        </member>
        <member name="P:CoViD.CL.Person.IsSegregated">
            <summary>
            True if the mobility of this person is lower than 'IsolationThreshold'.
            (The person must stay at home (Locations[0]) when it is segregated.)
            </summary>
        </member>
        <member name="F:CoViD.CL.Person.IsolationThreshold">
            <summary>
            A value imposed from the outside (a government) to decide who can move during an isolation period
            and who is forced to stay at home. (0 everyone is free to move; 255 eveyone is confinated at home.)
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:CoViD.CL.Person.Mobility" -->
        <member name="F:CoViD.CL.Person._Viruses">
            <summary>
            the number of viruses. Should be regarded as the number of "unities" of viruses
            </summary>
        </member>
        <member name="M:CoViD.CL.Person.#ctor(CoViD.CL.Locations)">
            <summary>
            
            </summary>
            <param name="locations"></param>
        </member>
        <member name="M:CoViD.CL.Person.#ctor(CoViD.CL.Locations,Vi.Types.Percentage,Vi.Types.Percentage,Vi.Types.Percentage,Vi.Types.Percentage,System.Byte)">
            <summary>
            
            </summary>
            <param name="locations"></param>
            <param name="virusGrowth"></param>
            <param name="antibodyGrowth"></param>
            <param name="antibodyDecay"></param>
            <param name="deadThreshold"></param>
            <param name="mobility"></param>
        </member>
        <member name="M:CoViD.CL.Person.Configure(CoViD.CL.Locations,Vi.Types.Percentage,Vi.Types.Percentage,Vi.Types.Percentage,System.Byte)">
            <summary>
            
            </summary>
            <param name="locations"></param>
            <param name="virusGrowth"></param>
            <param name="antibodyGrowth"></param>
            <param name="antibodyDecay"></param>
            <param name="mobility"></param>
        </member>
        <member name="T:CoViD.CL.Point">
            <summary>
            The coordinates (x, y)  of the location in space.
            </summary>
        </member>
        <member name="F:CoViD.CL.Point.X">
            <summary>
            The 'x' coordinate.
            </summary>
        </member>
        <member name="F:CoViD.CL.Point.Y">
            <summary>
            The 'y' coordinate.
            </summary>
        </member>
        <member name="M:CoViD.CL.Point.#ctor(System.Int32,System.Int32)">
            <summary>
            CTor. Sets the x, y values.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:CoViD.CL.Point.ToString">
            <summary>
            Makes each instance more readable during the Debug session.
            </summary>
            <returns></returns>
        </member>
        <member name="T:CoViD.CL.Population">
            <summary>
            
            </summary>
        </member>
        <member name="P:CoViD.CL.Population.N">
            <summary>
            The total number of persons
            </summary>
        </member>
        <member name="F:CoViD.CL.Population.Susceptibles">
            <summary>
             The number of susceptible individuals. When a susceptible and an infectious individual come into "infectious contact", the susceptible individual contracts the disease and transitions to the infectious compartment. [Wiki]
            </summary>
        </member>
        <member name="F:CoViD.CL.Population.Infected">
            <summary>
            The number of infectious individuals. These are individuals who have been infected and are capable of infecting susceptible individuals. [Wiki]
            </summary>
        </member>
        <member name="F:CoViD.CL.Population.Recovered">
            <summary>
            for the number of removed (and immune) or deceased individuals. These are individuals who have been infected and have either recovered from the disease and entered the removed compartment, or died. It is assumed that the number of deaths is negligible with respect to the total population. This compartment may also be called "recovered" or "resistant". [Wiki]
            </summary>
        </member>
        <member name="F:CoViD.CL.Population.DSusceptibles">
            <summary>
            Delta Susceptibles. The increments of the 'Susceptibles'.
            </summary>
        </member>
        <member name="F:CoViD.CL.Population.DInfected">
            <summary>
            Delta Infected. The increments of the 'Infected'.
            </summary>
        </member>
        <member name="F:CoViD.CL.Population.DRecovered">
            <summary>
            Delta Recovered. The increments of the 'Recovered'.
            </summary>
        </member>
        <member name="F:CoViD.CL.Population.Latency">
            <summary>
            The number of person in 'Latency': infected but still not contagious.
            </summary>
        </member>
        <member name="F:CoViD.CL.Population.Ill">
            <summary>
            The number of person 'ill'
            </summary>
        </member>
        <member name="F:CoViD.CL.Population.Severe">
            <summary>
            The number of person in need of Hospitalization
            </summary>
        </member>
        <member name="F:CoViD.CL.Population.Convalescent">
            <summary>
            The number of person 
            </summary>
        </member>
        <member name="F:CoViD.CL.Population.Immunes">
            <summary>
            The number of people recovered alive from the illness.
            </summary>
        </member>
        <member name="F:CoViD.CL.Population.Deads">
            <summary>
            The number of people recovered dead from the illness.
            </summary>
        </member>
        <member name="F:CoViD.CL.Population.γ">
            <summary>
            In the theory of SIR equation γ the probability of an infectious individual recovering. 
            </summary>
        </member>
        <member name="F:CoViD.CL.Population.β">
            <summary>
            In the theory of SIR equation β is the average number of contacts per person per time and is a given value
            In this model is a calculated  value. 
            </summary>
        </member>
        <member name="M:CoViD.CL.Population.Reset">
            <summary>
            Resets all the Person in this Population
            </summary>
        </member>
        <member name="M:CoViD.CL.Population.Tick">
            <summary>
            Runs the single unit of time. (Resets all the counter calls 'Tick' on all the person and sets all the statistics):
            </summary>
        </member>
        <member name="T:CoViD.CL.School">
            <summary>
            it's an accumulation point for youngsters
            </summary>
        </member>
        <member name="T:CoViD.CL.Workplace">
            <summary>
            The generic working place.
            </summary>
        </member>
    </members>
</doc>
